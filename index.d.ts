/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export const enum HttpMethod {
  GET = 'GET',
  POST = 'POST',
  PUT = 'PUT',
  DELETE = 'DELETE',
  PATCH = 'PATCH',
  HEAD = 'HEAD',
  OPTIONS = 'OPTIONS'
}
export interface RequestInit {
  method?: HttpMethod
  headers?: Record<string, string>
  body?: Array<number>
}
export const enum Browser {
  Chrome = 'Chrome',
  Firefox = 'Firefox'
}
export interface RetcherOptions {
  browser?: Browser
  ignoreTlsErrors?: boolean
  vanillaFallback?: boolean
  proxyUrl?: string
  /** Default timeout for this Retcher instance in milliseconds. */
  timeout?: number
}
export declare class RetchResponse {
  status: number
  statusText: string
  headers: Record<string, string>
  ok: boolean
  bytes(): Buffer
  text(): string
  json(): any
}
export type RetcherWrapper = Retcher
export declare class Retcher {
  constructor(options?: RetcherOptions | undefined | null)
  fetch(url: string, requestInit?: RequestInit | undefined | null): Promise<RetchResponse>
}
