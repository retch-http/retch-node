/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export const enum Browser {
  Chrome = 0,
  Firefox = 1
}
export interface RetcherNodeWrapperOptions {
  impersonate?: Browser
  ignoreTlsErrors?: boolean
  fallback?: boolean
  proxy?: string
}
export const enum HttpMethod {
  GET = 'GET',
  POST = 'POST',
  PUT = 'PUT',
  DELETE = 'DELETE',
  PATCH = 'PATCH',
  HEAD = 'HEAD',
  OPTIONS = 'OPTIONS',
  TRACE = 'TRACE'
}
export interface RequestInit {
  headers?: Record<string, string>
  method?: HttpMethod
  body?: Buffer
}
export declare class NodeWrappedResponse {
  status: number
  headers: Record<string, string>
  ok: boolean
  redirected: boolean
  type: string
  url: string
  statusText: string
  bytes(): Promise<Buffer>
  text(): Promise<string>
  json(): Promise<any>
}
export declare class RetcherNodeWrapper {
  constructor(options: RetcherNodeWrapperOptions)
  retch(url: string, options?: RequestInit | undefined | null): Promise<NodeWrappedResponse>
}
